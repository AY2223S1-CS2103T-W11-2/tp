@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ViewTargetModuleCommandParser" as ViewTargetModuleCommandParser LOGIC_COLOR
participant "v:ViewTargetModuleCommand" as ViewTargetModuleCommand LOGIC_COLOR
participant "CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("vtarget 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("vtarget 1")
note left
the "1" supplied here
as part of the argument
is the index of the
module in the list of
modules, from one-based
indexing.
end note
activate AddressBookParser

create ViewTargetModuleCommandParser
AddressBookParser -> ViewTargetModuleCommandParser
activate ViewTargetModuleCommandParser

ViewTargetModuleCommandParser --> AddressBookParser
deactivate ViewTargetModuleCommandParser

AddressBookParser -> ViewTargetModuleCommandParser
activate ViewTargetModuleCommandParser

create ViewTargetModuleCommand
ViewTargetModuleCommandParser -> ViewTargetModuleCommand
activate ViewTargetModuleCommand

ViewTargetModuleCommand --> ViewTargetModuleCommandParser : v
deactivate ViewTargetModuleCommand

ViewTargetModuleCommandParser --> AddressBookParser : v
deactivate ViewTargetModuleCommandParser

AddressBookParser --> LogicManager : v
destroy ViewTargetModuleCommandParser
deactivate AddressBookParser

LogicManager -> ViewTargetModuleCommand : execute()
activate ViewTargetModuleCommand

ViewTargetModuleCommand -> Model : viewModule()
note left
Arguments supplied to viewModule
here is the module code
of the target module identified
by the indexing in the
list of modules, omitted for
readability.
end note
activate Model

Model --> ViewTargetModuleCommand
deactivate Model

create CommandResult
ViewTargetModuleCommand -> CommandResult
activate CommandResult

CommandResult --> ViewTargetModuleCommand
deactivate CommandResult

ViewTargetModuleCommand --> LogicManager : result
deactivate ViewTargetModuleCommand

ViewTargetModuleCommand -[hidden]-> LogicManager : result
destroy ViewTargetModuleCommand

[<--LogicManager
deactivate LogicManager
@enduml